{"version":3,"sources":["components/GoodsList/GoodsList.tsx","components/ButtonGenerator/ButtonGenerator.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","ButtonGenerator","name","method","type","onClick","goodsFromServer","App","useState","goodsList","setGoodsList","visibility","setVisibility","lengthLimit","setLengthLimit","product","setProduct","prevVis","prevList","reverse","sort","good1","good2","localeCompare","length","value","onChange","event","target","filter","Array","fill","item","index","e","ReactDOM","render","document","getElementById"],"mappings":"iRAOaA,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,oBAAIC,UAAU,OAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAAeF,UAAU,gCAAzB,SACGE,GADMA,SCHJC,G,MAAkC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OAC7C,wBACEC,KAAK,SACLN,UAAU,oDACVO,QAASF,EAHX,SAKGD,MCTCI,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAoGaC,EA/Fc,WAC3B,MAAkCC,mBAAS,GAAD,OAAKF,IAA/C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAsCA,OACE,sBAAKlB,UAAU,wBAAf,UACE,uBACA,oBAAIA,UAAU,aAAd,iCACEa,GACG,cAAC,EAAD,CAAiBT,KAAK,QAAQC,OAzCd,WACvBS,GAAc,SAAAK,GAAO,OAAKA,QAyCvBN,GAEC,qCACE,cAAC,EAAD,CAAiBT,KAAK,UAAUC,OAzCpB,WAClBO,GAAa,SAAAQ,GAAQ,OAAI,YAAIA,GAAUC,gBAyCjC,cAAC,EAAD,CACEjB,KAAK,sBACLC,OAxCiB,WACzBO,GAAa,SAAAQ,GAAQ,OAAI,YAAIA,GAAUE,MACrC,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,YAwClC,cAAC,EAAD,CAAiBpB,KAAK,QAAQC,OApCpB,WAChBO,EAAa,GAAD,OAAKJ,IACjBQ,EAAe,MAmCT,cAAC,EAAD,CAAiBZ,KAAK,iBAAiBC,OAhC1B,WACnBO,GAAa,SAAAQ,GAAQ,OAAI,YAAIA,GAAUE,MACrC,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,gBA+BnC,qBAAK1B,UAAU,oDAAf,SACE,wBACE2B,MAAOZ,EACPa,SA9BQ,SAACC,GACnBb,GAAgBa,EAAMC,OAAOH,OAC7Bf,EAAa,UAAIJ,GACduB,QAAO,SAAA7B,GAAI,OAAIA,EAAKwB,SAAWG,EAAMC,OAAOH,WAyBvC,SAIGK,MAAM,IAAIC,KAAK,UAAUhC,KAAI,SAACiC,EAAMC,GAAP,OAC5B,wBAAoCR,MAAOQ,EAAQ,EAAnD,SAAuDA,EAAQ,GAA/D,UAAgBD,GAAhB,OAAuBC,EAAQ,WAIrC,uBACA,sBAAKnC,UAAU,mCAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,uBACEM,KAAK,OACLqB,MAAOV,EACPjB,UAAU,mDACV4B,SAAU,SAACQ,GAAD,OAAOlB,EAAWkB,EAAEN,OAAOH,YAGzC,qBAAK3B,UAAU,qCAAf,SACE,wBACEM,KAAK,SACLN,UAAU,oDACVO,QA7CI,WAChBK,GAAa,SAAAQ,GAAQ,4BAAQA,GAAR,CAAkBH,OACvCC,EAAW,KAwCD,+BASJ,cAAC,EAAD,CAAWnB,MAAOY,WCzG5B0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.856638ef.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodsList:React.FC<Props> = ({ goods }) => {\n  return (\n    <ul className=\"list\">\n      {goods.map(good => (\n        <li key={good} className=\"list-item is-size-3 is-narrow\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport './ButtonGenerator.scss';\n\ntype Props = {\n  name: string,\n  method:() => void,\n};\n\nexport const ButtonGenerator:React.FC<Props> = ({ name, method }) => (\n  <button\n    type=\"button\"\n    className=\"button is-success is-light is-outlined is-rounded\"\n    onClick={method}\n  >\n    {name}\n  </button>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\nimport { ButtonGenerator } from './components/ButtonGenerator';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\nconst App: React.FC<Props> = () => {\n  const [goodsList, setGoodsList] = useState([...goodsFromServer]);\n  const [visibility, setVisibility] = useState(false);\n  const [lengthLimit, setLengthLimit] = useState(1);\n  const [product, setProduct] = useState('');\n\n  const visibilitySwitch = () => {\n    setVisibility(prevVis => !prevVis);\n  };\n\n  const reverseList = () => {\n    setGoodsList(prevList => [...prevList].reverse());\n  };\n\n  const sortAlphabetically = () => {\n    setGoodsList(prevList => [...prevList].sort(\n      (good1, good2) => good1.localeCompare(good2),\n    ));\n  };\n\n  const resetList = () => {\n    setGoodsList([...goodsFromServer]);\n    setLengthLimit(1);\n  };\n\n  const sortbyLength = () => {\n    setGoodsList(prevList => [...prevList].sort(\n      (good1, good2) => good1.length - good2.length,\n    ));\n  };\n\n  const changeLimit = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setLengthLimit(+event.target.value);\n    setGoodsList([...goodsFromServer]\n      .filter(good => good.length >= +event.target.value));\n  };\n\n  const addToList = () => {\n    setGoodsList(prevList => [...prevList, product]);\n    setProduct('');\n  };\n\n  return (\n    <div className=\"App has-text-centered\">\n      <br />\n      <h1 className=\"title is-1\">Goods list sorting</h1>\n      {!visibility\n        && <ButtonGenerator name=\"Start\" method={visibilitySwitch} />}\n      {visibility\n      && (\n        <>\n          <ButtonGenerator name=\"Reverse\" method={reverseList} />\n          <ButtonGenerator\n            name=\"Sort alphabetically\"\n            method={sortAlphabetically}\n          />\n          <ButtonGenerator name=\"Reset\" method={resetList} />\n          <ButtonGenerator name=\"Sort by length\" method={sortbyLength} />\n          <div className=\"select is-rounded is-success is-light is-outlined\">\n            <select\n              value={lengthLimit}\n              onChange={changeLimit}\n            >\n              {Array(10).fill('option').map((item, index) => (\n                <option key={`${item}${index + 1}`} value={index + 1}>{index + 1}</option>\n              ))}\n            </select>\n          </div>\n          <br />\n          <div className=\"columns is-centered is-multiline\">\n            <div className=\"column is-one-fifth\">\n              <input\n                type=\"text\"\n                value={product}\n                className=\"input is-success is-light is-outlined is-rounded\"\n                onChange={(e) => setProduct(e.target.value)}\n              />\n            </div>\n            <div className=\"column is-one-fifth is-pulled-left\">\n              <button\n                type=\"button\"\n                className=\"button is-success is-light is-outlined is-rounded\"\n                onClick={addToList}\n              >\n                Click to Add\n              </button>\n            </div>\n          </div>\n          <GoodsList goods={goodsList} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}