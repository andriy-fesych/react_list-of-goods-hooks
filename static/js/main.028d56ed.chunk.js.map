{"version":3,"sources":["components/GoodsList/GoodsList.tsx","components/ButtonGenerator/ButtonGenerator.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","ButtonGenerator","name","method","type","onClick","goodsFromServer","App","useState","goodsList","setGoodsList","visibility","setVisibility","lengthLimit","setLengthLimit","product","setProduct","prevList","reverse","sort","good1","good2","localeCompare","length","value","onChange","event","target","filter","Array","fill","_","index","e","prevVis","ReactDOM","render","document","getElementById"],"mappings":"iRAOaA,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,oBAAIC,UAAU,OAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAAeF,UAAU,gCAAzB,SACGE,GADMA,SCHJC,G,MAAkC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OAC7C,wBACEC,KAAK,SACLN,UAAU,oDACVO,QAASF,EAHX,SAKGD,MCTCI,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAiGaC,EA5Fc,WAC3B,MAAkCC,mBAAS,GAAD,OAAKF,IAA/C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAsCA,OACE,sBAAKlB,UAAU,6BAAf,UACE,oBAAIA,UAAU,aAAd,gCACGa,EAGC,qCACE,cAAC,EAAD,CAAiBT,KAAK,UAAUC,OAvCtB,WAClBO,GAAa,SAAAO,GAAQ,OAAI,YAAIA,GAAUC,gBAuC/B,cAAC,EAAD,CACEhB,KAAK,sBACLC,OAtCe,WACzBO,GAAa,SAAAO,GAAQ,OAAI,YAAIA,GAAUE,MACrC,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,YAsChC,cAAC,EAAD,CAAiBnB,KAAK,QAAQC,OAlCtB,WAChBO,EAAa,GAAD,OAAKJ,IACjBQ,EAAe,MAiCP,cAAC,EAAD,CAAiBZ,KAAK,iBAAiBC,OA9B5B,WACnBO,GAAa,SAAAO,GAAQ,OAAI,YAAIA,GAAUE,MACrC,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,gBA6BjC,qBAAKzB,UAAU,oDAAf,SACE,wBACE0B,MAAOX,EACPY,SA5BM,SAACC,GACnBZ,GAAgBY,EAAMC,OAAOH,OAC7Bd,EAAa,UAAIJ,GACdsB,QAAO,SAAA5B,GAAI,OAAIA,EAAKuB,SAAWG,EAAMC,OAAOH,WAuBrC,SAIGK,MAAM,IAAIC,KAAK,IAAI/B,KAAI,SAACgC,EAAGC,GAAJ,OACtB,wBAA6BR,MAAOQ,EAAQ,EAA5C,SAAgDA,EAAQ,GAAxD,UAAgBA,EAAQ,WAI9B,sBAAKlC,UAAU,4CAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,uBACEM,KAAK,OACLoB,MAAOT,EACPjB,UAAU,mDACV2B,SAAU,SAACQ,GAAD,OAAOjB,EAAWiB,EAAEN,OAAOH,YAGzC,qBAAK1B,UAAU,sCAAf,SACE,wBACEM,KAAK,SACLN,UAAU,oDACVO,QA1CE,WAChBK,GAAa,SAAAO,GAAQ,4BAAQA,GAAR,CAAkBF,OACvCC,EAAW,KAqCC,+BASJ,cAAC,EAAD,CAAWnB,MAAOY,OAvCnB,cAAC,EAAD,CAAiBP,KAAK,QAAQC,OAxCd,WACvBS,GAAc,SAAAsB,GAAO,OAAKA,YCxB9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.028d56ed.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodsList:React.FC<Props> = ({ goods }) => {\n  return (\n    <ul className=\"list\">\n      {goods.map(good => (\n        <li key={good} className=\"list-item is-size-3 is-narrow\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport './ButtonGenerator.scss';\n\ntype Props = {\n  name: string,\n  method:() => void,\n};\n\nexport const ButtonGenerator:React.FC<Props> = ({ name, method }) => (\n  <button\n    type=\"button\"\n    className=\"button is-success is-light is-outlined is-rounded\"\n    onClick={method}\n  >\n    {name}\n  </button>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\nimport { ButtonGenerator } from './components/ButtonGenerator';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\nconst App: React.FC<Props> = () => {\n  const [goodsList, setGoodsList] = useState([...goodsFromServer]);\n  const [visibility, setVisibility] = useState(false);\n  const [lengthLimit, setLengthLimit] = useState(1);\n  const [product, setProduct] = useState('');\n\n  const visibilitySwitch = () => {\n    setVisibility(prevVis => !prevVis);\n  };\n\n  const reverseList = () => {\n    setGoodsList(prevList => [...prevList].reverse());\n  };\n\n  const sortAlphabetically = () => {\n    setGoodsList(prevList => [...prevList].sort(\n      (good1, good2) => good1.localeCompare(good2),\n    ));\n  };\n\n  const resetList = () => {\n    setGoodsList([...goodsFromServer]);\n    setLengthLimit(1);\n  };\n\n  const sortbyLength = () => {\n    setGoodsList(prevList => [...prevList].sort(\n      (good1, good2) => good1.length - good2.length,\n    ));\n  };\n\n  const changeLimit = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setLengthLimit(+event.target.value);\n    setGoodsList([...goodsFromServer]\n      .filter(good => good.length >= +event.target.value));\n  };\n\n  const addToList = () => {\n    setGoodsList(prevList => [...prevList, product]);\n    setProduct('');\n  };\n\n  return (\n    <div className=\"App has-text-centered pt-6\">\n      <h1 className=\"title is-1\">Goods list sorting</h1>\n      {(!visibility)\n        ? (<ButtonGenerator name=\"Start\" method={visibilitySwitch} />)\n        : (\n          <>\n            <ButtonGenerator name=\"Reverse\" method={reverseList} />\n            <ButtonGenerator\n              name=\"Sort alphabetically\"\n              method={sortAlphabetically}\n            />\n            <ButtonGenerator name=\"Reset\" method={resetList} />\n            <ButtonGenerator name=\"Sort by length\" method={sortbyLength} />\n            <div className=\"select is-rounded is-success is-light is-outlined\">\n              <select\n                value={lengthLimit}\n                onChange={changeLimit}\n              >\n                {Array(10).fill('').map((_, index) => (\n                  <option key={`${index + 1}`} value={index + 1}>{index + 1}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"field has-addons has-addons-centered mt-4\">\n              <div className=\"control is-one-fifth\">\n                <input\n                  type=\"text\"\n                  value={product}\n                  className=\"input is-success is-light is-outlined is-rounded\"\n                  onChange={(e) => setProduct(e.target.value)}\n                />\n              </div>\n              <div className=\"control is-one-fifth is-pulled-left\">\n                <button\n                  type=\"button\"\n                  className=\"button is-success is-light is-outlined is-rounded\"\n                  onClick={addToList}\n                >\n                  Click to Add\n                </button>\n              </div>\n            </div>\n            <GoodsList goods={goodsList} />\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}